function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import PropTypes from 'prop-types';
import IconButton from './IconButton';
import { Close } from 'pcln-icons';
import { refPropType } from './utils';

var CloseButton = function CloseButton(props) {
  return React.createElement(IconButton, _extends({}, props, {
    icon: React.createElement(Close, {
      size: props.size
    })
  }));
};

CloseButton.defaultProps = {
  size: 24,
  title: 'close'
};
CloseButton.propTypes = {
  onClick: PropTypes.func,
  size: PropTypes.number,
  dsRef: refPropType,
  title: PropTypes.string
};
CloseButton.displayName = 'CloseButton';
export default CloseButton;