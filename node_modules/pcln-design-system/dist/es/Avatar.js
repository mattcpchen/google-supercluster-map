function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  width: ", "px;\n  height: ", "px;\n  background-size: ", "px;\n  background-image: url(", ");\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import Flex from './Flex';
import Heading from './Heading';
import Text from './Text';
import { User } from 'pcln-icons';
var StyledImage = styled(Flex)(_templateObject(), function (props) {
  return props.size || 40;
}, function (props) {
  return props.size || 40;
}, function (props) {
  return props.size || 40;
}, function (props) {
  return props.src;
});

function Avatar(_ref) {
  var className = _ref.className,
      title = _ref.title,
      subtitle = _ref.subtitle,
      src = _ref.src,
      initials = _ref.initials,
      size = _ref.size,
      color = _ref.color;
  return React.createElement(Flex, {
    className: className
  }, React.createElement(StyledImage, {
    src: src,
    size: size,
    color: color,
    p: 2
  }, !src && initials && React.createElement(Text, {
    fontSize: 1
  }, initials.toUpperCase()), !src && !initials && React.createElement(User, null)), title && React.createElement(Flex, {
    flexDirection: "column",
    justifyContent: "center",
    ml: 3
  }, React.createElement(Heading.h5, {
    m: 0
  }, title), React.createElement(Text, {
    color: "text.light",
    fontSize: 0
  }, subtitle)));
}

Avatar.displayName = 'Avatar';
Avatar.propTypes = {
  className: PropTypes.string,
  title: PropTypes.string,
  subtitle: PropTypes.string,
  src: PropTypes.string,
  initials: PropTypes.string,
  size: PropTypes.number,
  color: PropTypes.string
};
Avatar.defaultProps = {
  className: '',
  color: 'primary'
};
export default Avatar;