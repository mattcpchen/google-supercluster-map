function _templateObject() {
  var data = _taggedTemplateLiteral([""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import styled from 'styled-components';
var TestComponent = styled.div(_templateObject());
var isStyledComponents3 = !!TestComponent.extend;
/**
 * This function is a bridge from styled-components 3 to 4+. In some cases, it isn't possible
 * to refactor components to avoid setting innerRefs on a specific component (e.g. when you need to add
 * a ref to a styled-component instance passed in as a prop).
 *
 * This relies on styled components created with SC3 having a .extend property, whereas SC4+ components
 * will not have .extend.
 * @returns {string}
 */

export default function getSCMigrationRef() {
  return isStyledComponents3 ? 'innerRef' : 'ref';
}