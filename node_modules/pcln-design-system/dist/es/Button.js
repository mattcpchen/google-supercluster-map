function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n  ", "\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  -webkit-font-smoothing: antialiased;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n  text-decoration: none;\n  font-family: inherit;\n  font-weight: 600;\n  line-height: 1.5;\n  cursor: ", ";\n  border-radius: ", ";\n  border-width: 0;\n  border-style: solid;\n  ", " ", " ", ";\n  ", "\n\n  &:disabled {\n    cursor: not-allowed;\n    color: ", ";\n    background-color: ", ";\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n    -webkit-font-smoothing: inherit;\n    font-weight: 500;\n    color: ", ";\n    line-height: ", ";\n    vertical-align: inherit;\n    padding: 0;\n    background-color: transparent;\n    &:hover {\n      color: ", ";\n      text-decoration: underline;\n    }\n  "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    color: ", ";\n    box-shadow: inset 0 0 0 2px\n      ", ";\n    background-color: transparent;\n\n    &:hover {\n      background-color: transparent;\n      ", "\n    }\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    background-color: ", ";\n    color: ", ";\n\n    &:hover {\n      background-color: ", ";\n      ", "\n    }\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import styled, { css } from 'styled-components';
import PropTypes from 'prop-types';
import { width, space } from 'styled-system';
import { mapProps, deprecatedPropType, applyVariations, getPaletteColor, getTextColorOn, deprecatedColorValue, getSCMigrationRef, refPropType } from './utils';

var size = function size(props) {
  switch (props.size) {
    case 'small':
      return {
        fontSize: "".concat(props.theme.fontSizes[0], "px"),
        padding: '7px 12px'
      };

    case 'medium':
      return {
        fontSize: "".concat(props.theme.fontSizes[1], "px"),
        padding: '9.5px 18px'
      };

    case 'large':
      return {
        fontSize: "".concat(props.theme.fontSizes[2], "px"),
        padding: '12px 22px'
      };

    default:
      return {
        fontSize: "".concat(props.theme.fontSizes[1], "px"),
        padding: '9.5px 18px'
      };
  }
};

var variations = {
  fill: css(_templateObject(), function (props) {
    return getPaletteColor(props.disabled ? 'light' : 'base')(props);
  }, function (props) {
    return getTextColorOn(props.disabled ? 'light' : 'base')(props);
  }, function (props) {
    return getPaletteColor(props.disabled ? 'light' : 'dark')(props);
  }, function (props) {
    return props.disabled ? '' : "color: ".concat(getTextColorOn('dark')(props), ";");
  }),
  outline: css(_templateObject2(), function (props) {
    return getPaletteColor(props.disabled ? 'light' : 'base')(props);
  }, function (props) {
    return getPaletteColor(props.disabled ? 'light' : 'base')(props);
  }, function (props) {
    return props.disabled ? '' : "\n        color: ".concat(getPaletteColor('dark')(props), ";\n        box-shadow: inset 0 0 0 2px ").concat(getPaletteColor('dark')(props), ";\n      ");
  }),
  link: css(_templateObject3(), getPaletteColor('base'), function (props) {
    return props.theme.lineHeights.standard;
  }, getPaletteColor('dark'))
};
export var buttonStyles = css(_templateObject4(), function (props) {
  return props.disabled ? 'default' : 'pointer';
}, function (props) {
  return props.theme.radius;
}, width, size, space, applyVariations('Button', variations), getPaletteColor('text.light'), getPaletteColor('background.base'));
/**
 * Use the <Button /> component to render a primitive button. Use the `variation` prop to change the look of the button.
 */

var Button = mapProps(function (_ref) {
  var _objectSpread2;

  var fullWidth = _ref.fullWidth,
      dsRef = _ref.dsRef,
      props = _objectWithoutProperties(_ref, ["fullWidth", "dsRef"]);

  return _objectSpread((_objectSpread2 = {
    width: fullWidth ? 1 : undefined
  }, _defineProperty(_objectSpread2, getSCMigrationRef(), dsRef), _defineProperty(_objectSpread2, 'aria-label', props.title), _objectSpread2), props);
})(styled.button(_templateObject5(), buttonStyles));
Button.propTypes = _objectSpread({
  size: PropTypes.oneOf(['small', 'medium', 'large'])
}, width.propTypes, {}, space.propTypes, {
  fullWidth: deprecatedPropType('width'),
  variation: PropTypes.oneOf(Object.keys(variations)),
  color: deprecatedColorValue(),
  dsRef: refPropType,
  disabled: PropTypes.bool
});
Button.defaultProps = {
  color: 'primary',
  variation: 'fill'
};
Button.displayName = 'Button';
export default Button;