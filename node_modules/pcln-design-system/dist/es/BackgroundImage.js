function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-color: ", ";\n  ", " ", " ", ";\n  ", "\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    background-attachment: scroll;\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    background-attachment: fixed;\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import styled, { css } from 'styled-components';
import PropTypes from 'prop-types';
import { width } from 'styled-system';
import { applyVariations, getPaletteColor, mapProps } from './utils';
var variations = {
  parallax: css(_templateObject()),
  "static": css(_templateObject2())
};

var image = function image(props) {
  return props.image ? {
    backgroundImage: "url(".concat(props.image, ")")
  } : null;
};

var height = function height(props) {
  return props.height ? {
    height: props.height
  } : null;
};

var BackgroundImage = mapProps(function (_ref) {
  var props = _extends({}, _ref);

  return _objectSpread({}, props);
})(styled.div(_templateObject3(), getPaletteColor('border.light'), image, height, width, applyVariations('BackgroundImage', variations)));
BackgroundImage.defaultProps = {
  variation: 'static'
};
BackgroundImage.propTypes = {
  /** background-image url */
  height: PropTypes.string,
  image: PropTypes.string,
  variation: PropTypes.oneOf(Object.keys(variations)),
  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array])
};
BackgroundImage.displayName = 'BackgroundImage';
export default BackgroundImage;