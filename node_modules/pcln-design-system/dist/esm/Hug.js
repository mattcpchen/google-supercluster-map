function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  & > * {\n    border: 0 !important;\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  border-top-left-radius: ", ";\n  border-top-right-radius: ", ";\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n  overflow: hidden;\n  ", "\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import Box from './Box';
import Card from './Card';
import Flex from './Flex';
import Text from './Text';
import styled from 'styled-components';
import PropTypes from 'prop-types';
import { applyVariations, deprecatedColorValue } from './utils';
var HugCard = styled(Card)(_templateObject(), function (props) {
  return props.theme.radius;
}, function (props) {
  return props.theme.radius;
}, applyVariations('Hug'));
var BorderConcealer = styled(Box)(_templateObject2());

var Hug = function Hug(_ref) {
  var bg = _ref.bg,
      color = _ref.color,
      p = _ref.p,
      fontSize = _ref.fontSize,
      icon = _ref.icon,
      iconDisplay = _ref.iconDisplay,
      props = _objectWithoutProperties(_ref, ["bg", "color", "p", "fontSize", "icon", "iconDisplay"]);

  var iconClone;

  if (React.isValidElement(icon)) {
    iconClone = React.cloneElement(icon, {
      style: {
        display: iconDisplay,
        mr: 2,
        mt: '-2px',
        mb: '2px',
        size: 24
      }
    });
  }

  return React.createElement(HugCard, _extends({}, props, {
    borderColor: bg || color
  }), React.createElement(Flex, {
    bg: bg,
    color: color,
    p: p,
    alignItems: "center"
  }, !!iconClone && iconClone, React.createElement(Text, {
    fontSize: fontSize
  }, props.text)), React.createElement(BorderConcealer, null, props.children));
};

Hug.defaultProps = {
  borderWidth: 1,
  color: 'text.lightest',
  fontSize: 1,
  p: 2
};
Hug.propTypes = {
  iconDisplay: PropTypes.arrayOf(PropTypes.string),
  icon: PropTypes.node,
  text: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node), PropTypes.string]),
  color: deprecatedColorValue()
};
export default Hug;