import createTextStyles from './createTextStyles';
import createColorStyles from './createColorStyles';

var createMediaQuery = function createMediaQuery(n) {
  return "@media screen and (min-width:".concat(n, ")");
};

var addAliases = function addAliases(arr, aliases) {
  return aliases.forEach(function (key, i) {
    return Object.defineProperty(arr, key, {
      enumerable: false,
      get: function get() {
        return this[i];
      }
    });
  });
};

export var breakpoints = [32, 40, 48, 64, 80].map(function (n) {
  return n + 'em';
});
export var mediaQueries = breakpoints.map(createMediaQuery);
var aliases = ['sm', 'md', 'lg', 'xl', 'xxl'];
addAliases(breakpoints, aliases);
addAliases(mediaQueries, aliases);
export var space = [0, 4, 8, 16, 32, 64, 128];
export var font = "'Montserrat','Helvetica Neue',Helvetica,Arial,sans-serif";
export var fontSizes = [12, 14, 16, 20, 24, 32, 40, 56, 72];
export var medium = 500;
export var bold = 700; // alias

export var regular = medium; // styled-system's `fontWeight` function can hook into the `fontWeights` object

export var fontWeights = {
  medium: medium,
  bold: bold,
  // alias
  regular: regular
};
export var lineHeights = {
  standard: 1.4,
  display: 1.25
};
var letterSpacings = {
  normal: 'normal',
  caps: '0.025em'
}; // color palette

var black = '#000';
var white = '#fff';
var text = '#001833';
var lightBlue = '#e8f2ff';
var blue = '#007aff';
var darkBlue = '#049';
var lightGray = '#f4f6f8';
var buttonGray = '#edf0f3';
var borderGray = '#c0cad5';
var gray = '#4f6f8f';
var darkGray = '#364049';
var lightGreen = '#ecf7ec';
var green = '#0a0';
var darkGreen = '#060';
var lightRed = '#fbebeb';
var red = '#c00';
var darkRed = '#800';
var orange = '#f68013';
var darkOrange = '#f06f20';
var lightOrange = '#fef2e7';
var lightPurple = '#f5ebfa';
var purple = '#70b';
var yellow = '#fedc2a';
var lightYellow = '#fff3c0';
var pink = '#fe3e81'; // deprecated aliases

var darkPurple = purple;
var colors = {
  black: black,
  white: white,
  text: text,
  blue: blue,
  lightBlue: lightBlue,
  darkBlue: darkBlue,
  gray: gray,
  lightGray: lightGray,
  buttonGray: buttonGray,
  borderGray: borderGray,
  darkGray: darkGray,
  green: green,
  lightGreen: lightGreen,
  darkGreen: darkGreen,
  red: red,
  lightRed: lightRed,
  darkRed: darkRed,
  orange: orange,
  darkOrange: darkOrange,
  lightOrange: lightOrange,
  purple: purple,
  lightPurple: lightPurple,
  yellow: yellow,
  lightYellow: lightYellow,
  pink: pink,
  // deprecated
  darkPurple: darkPurple
};
export { colors }; // styled-system's `borderRadius` function can hook into the `radii` object/array

export var radii = [0, 2, 6];
export var radius = '2px';
export var maxContainerWidth = '1280px'; // boxShadows

export var boxShadows = ["0 0 2px 0 rgba(0,0,0,.08),0 1px 4px 0 rgba(0,0,0,.16)", "0 0 2px 0 rgba(0,0,0,.08),0 2px 8px 0 rgba(0,0,0,.16)", "0 0 2px 0 rgba(0,0,0,.08),0 4px 16px 0 rgba(0,0,0,.16)", "0 0 2px 0 rgba(0,0,0,.08),0 8px 32px 0 rgba(0,0,0,.16)"];
export var textShadows = {
  sm: "0 1px 2px rgba(0,0,0,0.5)",
  md: "0 2px 4px rgba(0,0,0,0.5)"
}; // animation duration

export var duration = {
  fast: "150ms",
  normal: "300ms",
  slow: "450ms",
  slowest: "600ms"
}; // animation easing curves

var easeInOut = 'cubic-bezier(0.5, 0, 0.25, 1)';
var easeOut = 'cubic-bezier(0, 0, 0.25, 1)';
var easeIn = 'cubic-bezier(0.5, 0, 1, 1)';
var timingFunctions = {
  easeInOut: easeInOut,
  easeOut: easeOut,
  easeIn: easeIn
}; // animation delay

var transitionDelays = {
  small: "60ms",
  medium: "160ms",
  large: "260ms",
  xLarge: "360ms"
};
export var textStyles = createTextStyles({
  fontSizes: fontSizes,
  fontWeights: fontWeights,
  lineHeights: lineHeights,
  letterSpacings: letterSpacings
});
export var colorStyles = createColorStyles({
  colors: colors
});
var theme = {
  breakpoints: breakpoints,
  mediaQueries: mediaQueries,
  space: space,
  font: font,
  fontSizes: fontSizes,
  fontWeights: fontWeights,
  lineHeights: lineHeights,
  letterSpacings: letterSpacings,
  regular: regular,
  bold: bold,
  textStyles: textStyles,
  colors: colors,
  colorStyles: colorStyles,
  radii: radii,
  radius: radius,
  boxShadows: boxShadows,
  textShadows: textShadows,
  maxContainerWidth: maxContainerWidth,
  duration: duration,
  timingFunctions: timingFunctions,
  transitionDelays: transitionDelays
};
export default theme;