"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.buttonStyles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledSystem = require("styled-system");

var _utils = require("./utils");

function _templateObject5() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  ", "\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  -webkit-font-smoothing: antialiased;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n  text-decoration: none;\n  font-family: inherit;\n  font-weight: 600;\n  line-height: 1.5;\n  cursor: ", ";\n  border-radius: ", ";\n  border-width: 0;\n  border-style: solid;\n  ", " ", " ", ";\n  ", "\n\n  &:disabled {\n    cursor: not-allowed;\n    color: ", ";\n    background-color: ", ";\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n    -webkit-font-smoothing: inherit;\n    font-weight: 500;\n    color: ", ";\n    line-height: ", ";\n    vertical-align: inherit;\n    padding: 0;\n    background-color: transparent;\n    &:hover {\n      color: ", ";\n      text-decoration: underline;\n    }\n  "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n    color: ", ";\n    box-shadow: inset 0 0 0 2px\n      ", ";\n    background-color: transparent;\n\n    &:hover {\n      background-color: transparent;\n      ", "\n    }\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n    background-color: ", ";\n    color: ", ";\n\n    &:hover {\n      background-color: ", ";\n      ", "\n    }\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var size = function size(props) {
  switch (props.size) {
    case 'small':
      return {
        fontSize: "".concat(props.theme.fontSizes[0], "px"),
        padding: '7px 12px'
      };

    case 'medium':
      return {
        fontSize: "".concat(props.theme.fontSizes[1], "px"),
        padding: '9.5px 18px'
      };

    case 'large':
      return {
        fontSize: "".concat(props.theme.fontSizes[2], "px"),
        padding: '12px 22px'
      };

    default:
      return {
        fontSize: "".concat(props.theme.fontSizes[1], "px"),
        padding: '9.5px 18px'
      };
  }
};

var variations = {
  fill: (0, _styledComponents.css)(_templateObject(), function (props) {
    return (0, _utils.getPaletteColor)(props.disabled ? 'light' : 'base')(props);
  }, function (props) {
    return (0, _utils.getTextColorOn)(props.disabled ? 'light' : 'base')(props);
  }, function (props) {
    return (0, _utils.getPaletteColor)(props.disabled ? 'light' : 'dark')(props);
  }, function (props) {
    return props.disabled ? '' : "color: ".concat((0, _utils.getTextColorOn)('dark')(props), ";");
  }),
  outline: (0, _styledComponents.css)(_templateObject2(), function (props) {
    return (0, _utils.getPaletteColor)(props.disabled ? 'light' : 'base')(props);
  }, function (props) {
    return (0, _utils.getPaletteColor)(props.disabled ? 'light' : 'base')(props);
  }, function (props) {
    return props.disabled ? '' : "\n        color: ".concat((0, _utils.getPaletteColor)('dark')(props), ";\n        box-shadow: inset 0 0 0 2px ").concat((0, _utils.getPaletteColor)('dark')(props), ";\n      ");
  }),
  link: (0, _styledComponents.css)(_templateObject3(), (0, _utils.getPaletteColor)('base'), function (props) {
    return props.theme.lineHeights.standard;
  }, (0, _utils.getPaletteColor)('dark'))
};
var buttonStyles = (0, _styledComponents.css)(_templateObject4(), function (props) {
  return props.disabled ? 'default' : 'pointer';
}, function (props) {
  return props.theme.radius;
}, _styledSystem.width, size, _styledSystem.space, (0, _utils.applyVariations)('Button', variations), (0, _utils.getPaletteColor)('text.light'), (0, _utils.getPaletteColor)('background.base'));
/**
 * Use the <Button /> component to render a primitive button. Use the `variation` prop to change the look of the button.
 */

exports.buttonStyles = buttonStyles;
var Button = (0, _utils.mapProps)(function (_ref) {
  var _objectSpread2;

  var fullWidth = _ref.fullWidth,
      dsRef = _ref.dsRef,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["fullWidth", "dsRef"]);
  return _objectSpread((_objectSpread2 = {
    width: fullWidth ? 1 : undefined
  }, (0, _defineProperty2["default"])(_objectSpread2, (0, _utils.getSCMigrationRef)(), dsRef), (0, _defineProperty2["default"])(_objectSpread2, 'aria-label', props.title), _objectSpread2), props);
})(_styledComponents["default"].button(_templateObject5(), buttonStyles));
Button.propTypes = _objectSpread({
  size: _propTypes["default"].oneOf(['small', 'medium', 'large'])
}, _styledSystem.width.propTypes, {}, _styledSystem.space.propTypes, {
  fullWidth: (0, _utils.deprecatedPropType)('width'),
  variation: _propTypes["default"].oneOf(Object.keys(variations)),
  color: (0, _utils.deprecatedColorValue)(),
  dsRef: _utils.refPropType,
  disabled: _propTypes["default"].bool
});
Button.defaultProps = {
  color: 'primary',
  variation: 'fill'
};
Button.displayName = 'Button';
var _default = Button;
exports["default"] = _default;