"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _Flex = _interopRequireDefault(require("./Flex"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var IconField = function IconField(props) {
  var isIcon = function isIcon(item) {
    return item.type.isIcon || item.type.isIconButton;
  };

  var children = _react["default"].Children.toArray(props.children).filter(function (child) {
    return child.type.isField || isIcon(child);
  });

  var styledChildren = children.map(function (child, i) {
    if (isIcon(child)) {
      return _react["default"].cloneElement(child, {
        style: _objectSpread({}, child.props.style, {
          flex: 'none',
          alignSelf: 'center',
          pointerEvents: child.type.isIcon ? 'none' : 'auto',
          marginLeft: i === 0 ? 8 : -32,
          marginRight: i === 0 ? -32 : 8,
          position: 'relative'
        })
      });
    }

    return _react["default"].cloneElement(child, {
      style: _objectSpread({}, child.props.style, {
        paddingLeft: i === 0 ? undefined : 40,
        paddingRight: i === children.length - 1 ? undefined : 40
      })
    });
  });
  return _react["default"].createElement(_Flex["default"], null, styledChildren);
};

var _default = IconField;
exports["default"] = _default;