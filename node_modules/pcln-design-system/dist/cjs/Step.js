"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _pclnIcons = require("pcln-icons");

var _Button = _interopRequireDefault(require("./Button"));

var _Text = _interopRequireDefault(require("./Text"));

var _utils = require("./utils");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  background-color: ", ";\n  color: ", ";\n  cursor: ", ";\n  padding: 0;\n  font-weight: unset;\n\n  &:hover {\n    background-color: ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var StepperFlex = (0, _styledComponents["default"])(_Button["default"])(_templateObject(), (0, _utils.getPaletteColor)('background.lightest'), (0, _utils.getPaletteColor)('base'), function (props) {
  return props.onClick ? 'pointer' : 'default';
}, (0, _utils.getPaletteColor)('background.lightest'));

function Step(_ref) {
  var className = _ref.className,
      active = _ref.active,
      completed = _ref.completed,
      children = _ref.children,
      onClick = _ref.onClick,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["className", "active", "completed", "children", "onClick"]);
  var color = active || completed ? 'primary' : 'text.light';
  return _react["default"].createElement(StepperFlex, (0, _extends2["default"])({
    className: className,
    alignItems: "center",
    onClick: onClick
  }, props), completed && _react["default"].createElement(_pclnIcons.Check, {
    color: "primary",
    size: 16,
    mr: 1,
    "aria-hidden": false,
    "aria-label": "Step Completed"
  }), _react["default"].createElement(_Text["default"], {
    color: color,
    bold: active,
    fontSize: 1,
    "aria-selected": active
  }, children));
}

Step.displayName = 'Step';
Step.propTypes = {
  className: _propTypes["default"].string,
  active: _propTypes["default"].bool,
  completed: _propTypes["default"].bool,
  children: _propTypes["default"].node.isRequired,
  onClick: _propTypes["default"].func
};
Step.defaultProps = {
  className: '',
  active: false,
  completed: false
};
var _default = Step;
exports["default"] = _default;