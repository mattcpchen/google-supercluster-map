"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = getSCMigrationRef;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])([""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var TestComponent = _styledComponents["default"].div(_templateObject());

var isStyledComponents3 = !!TestComponent.extend;
/**
 * This function is a bridge from styled-components 3 to 4+. In some cases, it isn't possible
 * to refactor components to avoid setting innerRefs on a specific component (e.g. when you need to add
 * a ref to a styled-component instance passed in as a prop).
 *
 * This relies on styled components created with SC3 having a .extend property, whereas SC4+ components
 * will not have .extend.
 * @returns {string}
 */

function getSCMigrationRef() {
  return isStyledComponents3 ? 'innerRef' : 'ref';
}