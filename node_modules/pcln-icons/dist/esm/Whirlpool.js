function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  outline: none;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import Svg from './Svg';
import styled from 'styled-components';

var BaseComponent = function BaseComponent(_ref) {
  var size = _ref.size,
      title = _ref.title,
      desc = _ref.desc,
      titleId = _ref.titleId,
      descId = _ref.descId,
      props = _objectWithoutProperties(_ref, ["size", "title", "desc", "titleId", "descId"]);

  var ariaLabelledBy = titleId ? titleId : '';
  ariaLabelledBy += desc && descId ? " ".concat(descId) : '';
  ariaLabelledBy = ariaLabelledBy ? ariaLabelledBy : undefined;
  props['aria-labelledby'] = ariaLabelledBy;
  return React.createElement(Svg, _extends({
    viewBox: "0 0 24 24",
    height: size,
    width: size,
    title: title,
    titleId: titleId,
    desc: desc,
    descId: descId,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": !ariaLabelledBy,
    fill: "currentcolor"
  }, props), !!title && React.createElement("title", {
    id: titleId
  }, title), !!desc && React.createElement("desc", {
    id: descId
  }, desc), React.createElement("path", {
    d: "M11.1 11.5c-.3-.2-.6-.5-.8-.7L8.9 9.2c-.2-.2-.4-.3-.7-.5-.3-.1-.6-.2-1-.2C6 8.5 5 9.5 5 10.8v.8H2v8c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-8H11.1zm-4.1 8H5v-6h2v6zm4 0H9v-6h2v6zm4 0h-2v-6h2v6zm4 0h-2v-6h2v6zm-.4-14.1c-.6-.7-.9-1.5-.7-2.3l.1-.6h-1.9l-.1.4c-.2 1.4.3 2.7 1.3 3.7l.1.1c.6.6.8 1.4.7 2.2l-.1.6h1.9l.1-.4c.2-1.4-.3-2.7-1.4-3.7zm-4 0c1 1 1.5 2.3 1.3 3.7l-.1.4H14l.1-.6c.1-.8-.1-1.6-.7-2.2l-.1-.1c-1-1-1.5-2.4-1.3-3.7l.1-.4H14l-.1.6c-.1.8.1 1.6.7 2.3zM7 7.5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
  }));
};

var SvgWhirlpool = styled(BaseComponent)(_templateObject());
SvgWhirlpool.isIcon = true;
SvgWhirlpool.defaultProps = {
  size: 24,
  tabIndex: -1,
  focusable: false,
  'aria-hidden': true,
  role: 'img'
};
export default SvgWhirlpool;