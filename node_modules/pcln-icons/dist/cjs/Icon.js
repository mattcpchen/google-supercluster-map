"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _lodash = _interopRequireDefault(require("lodash.upperfirst"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var icons = _interopRequireWildcard(require("./index"));

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  outline: none;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var BaseIcon = function BaseIcon(_ref) {
  var name = _ref.name,
      title = _ref.title,
      desc = _ref.desc,
      titleId = _ref.titleId,
      descId = _ref.descId,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["name", "title", "desc", "titleId", "descId"]);
  var Component = icons[name] || icons[(0, _lodash["default"])(name)];
  var ariaLabelledBy = titleId ? titleId : '';
  ariaLabelledBy += desc && descId ? " ".concat(descId) : '';
  ariaLabelledBy = ariaLabelledBy ? ariaLabelledBy : undefined;

  if (!Component) {
    if (process.env.NODE_ENV !== 'production') {
      console.trace(name ? "icon ".concat(name, " does not exist") : 'icon is missing name prop');
    }

    return null;
  } else {
    return _react["default"].createElement(Component, (0, _extends2["default"])({
      title: title || name,
      desc: desc,
      titleId: titleId,
      descId: descId,
      "aria-hidden": !ariaLabelledBy,
      "aria-labelledby": ariaLabelledBy,
      tabIndex: -1,
      focusable: false
    }, props));
  }
};

var Icon = (0, _styledComponents["default"])(BaseIcon)(_templateObject());
Icon.isIcon = true;
Icon.displayName = 'Icon';
Icon.defaultProps = {
  size: 24
};
Icon.propTypes = {
  name: function name(props, key, componentName) {
    var name = props[key];

    if (!icons[name] && !icons[(0, _lodash["default"])(name)]) {
      return new Error("Unknown name prop `".concat(name, "` supplied to `").concat(componentName, "`"));
    }
  },
  title: _propTypes["default"].string,
  titleId: _propTypes["default"].string,
  desc: _propTypes["default"].string,
  descId: _propTypes["default"].string
};
var _default = Icon;
exports["default"] = _default;