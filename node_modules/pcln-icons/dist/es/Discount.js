function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  outline: none;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import Svg from './Svg';
import styled from 'styled-components';

var BaseComponent = function BaseComponent(_ref) {
  var size = _ref.size,
      title = _ref.title,
      desc = _ref.desc,
      titleId = _ref.titleId,
      descId = _ref.descId,
      props = _objectWithoutProperties(_ref, ["size", "title", "desc", "titleId", "descId"]);

  var ariaLabelledBy = titleId ? titleId : '';
  ariaLabelledBy += desc && descId ? " ".concat(descId) : '';
  ariaLabelledBy = ariaLabelledBy ? ariaLabelledBy : undefined;
  props['aria-labelledby'] = ariaLabelledBy;
  return React.createElement(Svg, _extends({
    viewBox: "0 0 24 24",
    height: size,
    width: size,
    title: title,
    titleId: titleId,
    desc: desc,
    descId: descId,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": !ariaLabelledBy,
    fill: "currentcolor"
  }, props), !!title && React.createElement("title", {
    id: titleId
  }, title), !!desc && React.createElement("desc", {
    id: descId
  }, desc), React.createElement("path", {
    d: "M23 12l-2.4 2.7.3 3.5-3.6.8-1.9 3-3.4-1.4L8.6 22l-1.9-3-3.6-.8.3-3.5L1 12l2.4-2.7-.3-3.5L6.7 5l1.9-3L12 3.4 15.4 2l1.9 3 3.6.8-.3 3.5L23 12zm-10.8-.6c-1.3-.3-1.8-.7-1.8-1.3 0-.6.6-1.1 1.6-1.1s1.4.5 1.5 1.2h1.3c0-1-.7-1.9-1.9-2.2V6.7h-1.8V8c-1.1.2-2 1-2 2.1 0 1.3 1.1 2 2.8 2.4 1.5.4 1.8.9 1.8 1.4 0 .4-.3 1-1.6 1-1.2 0-1.7-.5-1.8-1.2H9c.1 1.3 1 2 2.2 2.2v1.3H13V16c1.1-.2 2.1-.9 2.1-2.1-.1-1.6-1.5-2.2-2.9-2.5z"
  }));
};

var SvgDiscount = styled(BaseComponent)(_templateObject());
SvgDiscount.isIcon = true;
SvgDiscount.defaultProps = {
  size: 24,
  tabIndex: -1,
  focusable: false,
  'aria-hidden': true,
  role: 'img'
};
export default SvgDiscount;